spring.application.name=masil

jwt.secret= aaaaaabbbbbbccccccddddddeeeeeeeffffff
jwt.access-token-expiration=1800000
jwt.refresh-token-expiration=604800000
jwt.issuer=masil

# MySQL ??
spring.datasource.url=jdbc:mysql://localhost:3306/masil_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=masilLA0935@!

# JPA ??
#spring.jpa.hibernate.ddl-auto=update
# JPA DDL-Auto 설정 (개발/테스트 용이)
# 'update' 대신 'create-drop'을 사용하여 앱 재시작 시마다 깨끗한 DB 상태에서 테스트 데이터 주입
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.charset=utf8mb4
spring.jpa.properties.hibernate.characterEncoding=utf8

# ?? ??
logging.level.com.sinsaimdang.masilkkoon.masil=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.root=INFO

server.address=0.0.0.0
server.port=8080

# data.sql 자동 실행 활성화 (Spring Boot 2.5+ 버전에서 data.sql 자동 실행을 위해 필요)
spring.sql.init.mode=always



# JPA DDL 생성 이후에 data.sql을 실행하도록 설정
spring.jpa.defer-datasource-initialization=true